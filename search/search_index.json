{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Art-net LED Lighting for DMX","text":"<p>A comprehensive Home Assistant integration that transforms your smart home into a professional lighting control system using Art-Net and DMX protocols.</p>"},{"location":"#what-is-this-integration","title":"What is this integration?","text":"<p>This integration creates a software-based Art-Net controller within Home Assistant, allowing you to control professional lighting fixtures, LED strips, and stage equipment directly from your smart home platform. Whether you're setting up architectural lighting, home theater ambiance, or stage lighting effects, this integration bridges the gap between consumer smart home technology and professional lighting control.</p>"},{"location":"#what-you-get","title":"What You Get","text":"<p>Once configured, the integration creates Home Assistant entities for each fixture and channel:</p> <p> Example: Configured fixtures appear as standard Home Assistant entities with full control capabilities</p>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#art-net-controller","title":"Art-Net Controller","text":"<ul> <li>Software-based Art-Net controller - Turn your Home Assistant instance into a functional Art-Net controller</li> <li>Universe management - Control multiple Art-Net universes with flexible addressing</li> <li>Bi-directional communication - Send commands to other Art-Net devices and receive universe updates from other controllers</li> <li>Auto-discovery - Announces itself to other Art-Net devices on your network</li> </ul> <pre><code>graph TB\n    subgraph \"Home Assistant Server\"\n        subgraph \"Home Assistant Core\"\n            HA[Home Assistant Core]\n            ENTITIES[Light entities&lt;br/&gt;Switch entities&lt;br/&gt;Number entities]\n            AUTO[Automations&lt;br/&gt;Scripts&lt;br/&gt;Scenes]\n        end\n\n        subgraph \"Art-Net Integration\"\n            ARTNET[Art-Net LED Integration]\n            CONTROLLER[Software Art-Net Controller]\n            FIXTURE_MGR[OpenFixtureLibrary]\n        end\n    end\n\n    subgraph \"Network Infrastructure\"\n        NETWORK[Ethernet/WiFi Network&lt;br/&gt;Art-Net Protocol]\n    end\n\n    subgraph \"Art-Net Node Hardware\"\n        NODE[Art-Net Node]\n        DMX_OUT[DMX Output]\n        FIXTURES[LED Fixtures&lt;br/&gt;Moving Lights&lt;br/&gt;Dimmers]\n    end\n\n    subgraph \"Art-Net Controller Hardware\"\n        EXT_CTRL[External Art-Net Controller&lt;br/&gt;Lighting Console]\n        FADERS[Physical Faders&lt;br/&gt;Buttons&lt;br/&gt;Encoders]\n    end\n\n    %% Bidirectional communication within HA\n    ARTNET --&gt;|Events| HA \n    ARTNET &lt;--&gt; ENTITIES\n    HA &lt;--&gt; AUTO\n    AUTO &lt;--&gt; ENTITIES\n    FIXTURE_MGR -.-&gt;|Fixture definitions| ARTNET\n\n    %% Art-Net network communication\n    NETWORK --&gt; NODE\n    EXT_CTRL &lt;--&gt; NETWORK\n    NETWORK &lt;--&gt; CONTROLLER\n    CONTROLLER &lt;--&gt; ARTNET\n\n    %% Hardware connections\n    NODE --&gt; DMX_OUT\n    DMX_OUT --&gt; FIXTURES\n    FADERS --&gt; EXT_CTRL\n\n    %% Data flow labels\n\n    classDef haCore fill:#41BDF5,stroke:#1976D2,color:#fff\n    classDef integration fill:#4CAF50,stroke:#2E7D32,color:#fff\n    classDef hardware fill:#FF9800,stroke:#F57C00,color:#fff\n    classDef network fill:#9C27B0,stroke:#6A1B9A,color:#fff\n\n    class HA,ENTITIES,AUTO haCore\n    class ARTNET,CONTROLLER,FIXTURE_MGR integration\n    class NODE,EXT_CTRL,FADERS,DMX_OUT,FIXTURES hardware\n    class NETWORK network</code></pre>"},{"location":"#professional-fixture-support","title":"Professional Fixture Support","text":"<ul> <li>OpenFixtureLibrary integration - Use industry-standard fixture definitions for accurate control</li> <li>Multi-mode fixtures - Support for fixtures with different channel modes (8-bit, 16-bit, RGB, RGBW, etc.)</li> <li>Flexible addressing - Configure start addresses and channel mappings per fixture</li> <li>Multiple fixture types - From simple LED strips to complex moving lights</li> </ul>"},{"location":"#network-protocols","title":"Network Protocols","text":"<ul> <li>Art-Net - Primary protocol support with full universe control</li> <li>sACN (E1.31) - Streaming ACN support for modern lighting networks (coming soon)</li> </ul>"},{"location":"#how-it-works","title":"How it works","text":"<ol> <li>Install through HACS as \"Art-net LED Lighting for DMX\"</li> <li>Place OpenFixtureLibrary JSON files in your configured fixtures folder</li> <li>Define universes, devices, and addressing in Home Assistant configuration</li> <li>Control fixtures through standard Home Assistant entities and automations</li> </ol>"},{"location":"#works-well-with","title":"Works well with","text":"<ul> <li>Adaptive Lighting integration - Automatically adjusts color temperature to match the sun's position throughout the day</li> <li>Emulated HUE Add-On - Mimics a Hue controller to send real-time lighting data to Art-Net fixtures (e.g., TV ambilight effects to RGBW strips)</li> </ul>"},{"location":"#community","title":"Community","text":"<p>Home Assistant community</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Ready to transform your lighting setup? Head over to the Configuration section to learn how to set up your first Art-Net universe and fixtures.</p> <p>Art-Net\u2122 Designed by and Copyright Artistic Licence</p> <p>This integration brings professional lighting control capabilities to Home Assistant, making it easy to create stunning lighting effects and integrate them with your existing smart home automation.</p>"},{"location":"artnet-controller-communication/","title":"External Art-Net Controller Communication","text":"<p>This documentation covers how your Home Assistant ArtNet integration communicates with external ArtNet controllers.</p>"},{"location":"artnet-controller-communication/#overview","title":"Overview","text":"<p>The ArtNet integration in Home Assistant sets up a software-based ArtNet controller that can be discovered by other ArtNet controllers.</p> <p>The OEM code of integration is <code>0x2BE9</code>, which is registered with Art-Net. </p>"},{"location":"artnet-controller-communication/#auto-discovery","title":"Auto-Discovery","text":"<p>ArtNet controllers are typically auto-discovered through ArtNet's built-in discovery mechanism:</p> <ol> <li>When your integration receives an ArtPoll request from external controllers, it evaluates whether to respond.</li> <li>If the targeted mode on the external controller is disabled, the integration will always respond.</li> <li>Otherwise, your controller checks if its universes match what the external controller is looking for and only responds if an overlap is found.</li> <li>If no matching universes exist, the request is ignored (debug log: <code>Received ArtPoll, but ignoring it since none of its universes overlap with our universes.</code>)</li> </ol>"},{"location":"artnet-controller-communication/#receiving-data-from-external-controllers","title":"Receiving Data from External Controllers","text":""},{"location":"artnet-controller-communication/#dmx-data","title":"DMX Data","text":"<p>External controllers can send DMX data to universes configured in your Home Assistant controller. When received:</p> <ul> <li>The integration updates the corresponding entity values</li> <li>Entity updates are limited to 2 updates per second to not flood HomeAssistant with updates.</li> </ul>"},{"location":"artnet-controller-communication/#arttrigger-events","title":"ArtTrigger Events","text":"<p>External controllers can send ArtTrigger messages which are converted to Home Assistant events:</p> <ul> <li>Event type: <code>artnet_trigger</code></li> <li>Payload must be a null-terminated string (<code>UTF-8</code> preferred, maximum 512 bytes)</li> <li>The event contains metadata about the trigger source</li> </ul> <p>Example event structure in Home Assistant:</p> <pre><code>event_type: artnet_trigger\ndata:\n  oem: 11241 # Decimal representation of OEM code\n  key: 1\n  sub_key: 4\n  payload: Test 123 This is a system test\norigin: LOCAL\ntime_fired: \"2025-06-09T12:34:44.691947+00:00\"\ncontext:\n  id: 01JXAAZ7AKF1BE86A78RWME2KY\n  parent_id: null\n  user_id: null\n</code></pre>"},{"location":"artnet-controller-communication/#subscriber-mechanism","title":"Subscriber Mechanism","text":"<p>The integration implements a subscriber mechanism to manage communication with other ArtNet nodes, ensuring they receive timely updates when changes occur in Home Assistant.</p>"},{"location":"artnet-controller-communication/#how-subscribers-work","title":"How Subscribers Work","text":"<p>When an external controller sends an ArtPoll request with the <code>notify_on_change</code> flag set to true, it is automatically added to a subscriber pool:</p> <p>These subscribers receive automatic updates whenever relevant changes occur in your controller, without needing to continuously poll for changes.</p>"},{"location":"artnet-controller-communication/#when-updates-are-sent-to-subscribers","title":"When Updates Are Sent to Subscribers","text":"<p>Updates are sent to all subscribers in the following scenarios:</p> <ol> <li>Configuration Changes: When universes or ports are added or removed from your controller</li> <li>Status Changes: When the status of a port changes (e.g., data transmission begins or ends)</li> <li>Input Activity: When data is received on an input port, and the flag changes</li> </ol>"},{"location":"artnet-controller-communication/#removing-subscribers","title":"Removing Subscribers","text":"<p>A background task periodically checks for nodes that haven't been seen in 10 seconds. When a stale node is found, they are removed from the subscriber pool.</p>"},{"location":"artnet-controller-communication/#diagnostic-messages","title":"Diagnostic Messages","text":"<p>To aid in troubleshooting, the integration logs activity when subscribers are added or removed:</p> <ul> <li>When a node is added: <code>Discovered new node at X.X.X.X@Y with Z/W/[universe list]</code></li> <li>When a node hasn't been seen for a while: <code>Haven't seen node X.X.X.X#Y for Z seconds; removing it.</code></li> </ul> <p>Art-Net\u2122 Designed by and Copyright Artistic Licence</p>"},{"location":"beta/","title":"Welcome to the beta of the platform refactor!","text":"<p>We're now compatible with the every fixture that can be defined through Open Fixture Library. This means we now support moving heads, strobes, and much more. Since this standard is so expansive, I can use some help with testing this.</p>"},{"location":"beta/#how-to-use-it","title":"How to use it?","text":"<p>Since the DOMAIN has been renamed from <code>artnet_led</code> to <code>dmx</code>, HACS might get angry, so for now it will require a manual installation by copying <code>custom_components/dmx</code> into your <code>custom_components</code> folder on HomeAssistant, then restarting.</p> <p>For migrating your old fixtures into the new format, I've written up a migration guide.</p> <p>Part of the beta is to test if my documentation suffices. So head over to the index and see if you can figure out how to use it.</p>"},{"location":"beta/#whats-in-the-box","title":"What's in the box?","text":"<ul> <li>What was previous <code>node_type: artnet-controller</code> has now become the standard, with <code>artnet-direct</code> being moved to compatibility options.</li> <li>Rate limiting when sending DMX data from an external controller to HomeAssistant</li> <li>Discovered Art-Net nodes will create new entities</li> <li>Art-Net triggers will invoke HomeAssistant events</li> </ul>"},{"location":"beta/#whats-excluded","title":"What's excluded?","text":"<ul> <li>sACN: I want to do a full implementation like I did with Art-Net/</li> <li>Transitions: I'd love to support custom animations, but not yet sure how I would have you define them.</li> <li>RDM: This is a HUGE standard, won't make it to the full release either.</li> </ul>"},{"location":"beta/#where-to-report-feedback","title":"Where to report feedback?","text":"<p>All feedback and ideas are greatly welcome!</p> <p>Create a GitHub issue and label it with <code>platform-refactor</code>.</p>"},{"location":"beta/#legal","title":"Legal","text":"<p>Since now none of the original code remains, I'm able to upgrade our license to GPL v3. This guarantees that this any derivatives of this work will always remain open source. :)</p>"},{"location":"config/","title":"Configuration","text":""},{"location":"config/#step-1-download-fixture-definitions","title":"Step 1: Download Fixture Definitions","text":"<p>Before configuring the integration, you need fixture definition files from the Open Fixture Library.</p> <ol> <li>Visit open-fixture-library.org</li> <li>Search for your specific fixture model</li> <li>For generic fixtures (RGB strips, CW/WW faders, etc.), search for <code>generic</code></li> <li>Download the fixture as \"Open Fixture Library JSON\" format</li> <li>Place the downloaded <code>.json</code> files in your <code>config/fixtures/</code> directory</li> </ol>"},{"location":"config/#step-2-yaml-configuration","title":"Step 2: YAML Configuration","text":"<p>Add the DMX configuration to your <code>configuration.yaml</code>:</p> <pre><code>dmx:\n  fixtures:\n    folder: fixtures\n\n  artnet:\n    max_fps: 43\n    refresh_every: 1.2\n    rate_limit: 0.5\n\n    universes:\n      - 1/2/0:\n          devices:\n            - Epic triple lights:\n                start_address: 11\n                fixture: CLHB300RGBW\n                mode: 42ch\n                entity_id_prefix: my_first_entity_id\n\n          compatibility:\n            send_partial_universe: False\n            manual_nodes:\n              - { host: 192.168.1.11, port: 6454 }\n              - { host: 192.168.1.12 }\n\n      - 3: # minimal required config\n          devices:\n            - DJ led:\n                start_address: 0\n                fixture: DJ Scan LED\n</code></pre>"},{"location":"config/#configuration-options","title":"Configuration Options","text":""},{"location":"config/#dmxfixtures","title":"<code>dmx.fixtures</code>","text":"<ul> <li><code>folder</code> (optional, default: <code>fixtures</code>)   Directory containing fixture JSON files, relative to Home Assistant config directory (where your <code>configuration.yaml</code> is located)</li> </ul>"},{"location":"config/#dmxartnet","title":"<code>dmx.artnet</code>","text":"<ul> <li><code>max_fps</code> (optional, default: <code>30</code>)   Maximum frames per second for animations [0, 43]</li> <li><code>refresh_every</code> (optional, default: <code>0.8</code>)   The interval in seconds in which universe data is retransmitted. This is useful when there are external controllers sending to the same universes. Set to <code>0</code> to disable this behavior.</li> <li><code>rate_limit</code> (optional, default: <code>0.5</code>)   The rate limit in seconds between each entity update when received from an external controller. Increase this value if HomeAssistant slows down too much when receiving updates.</li> </ul>"},{"location":"config/#dmxartnetuniverses","title":"<code>dmx.artnet.universes</code>","text":"<p>Universe definitions. Each universe can be specified as:</p> <ul> <li>Full format: <code>Net/Sub-net/Universe</code> (e.g., <code>1/2/0</code>)</li> <li>Short format: <code>Universe</code> only (e.g., <code>3</code> - Net and Sub-net default to 0)</li> </ul>"},{"location":"config/#universe-configuration","title":"Universe Configuration","text":"<ul> <li><code>devices</code> (mandatory)   List of fixtures in this universe</li> </ul>"},{"location":"config/#device-configuration","title":"Device Configuration","text":"<ul> <li><code>start_address</code> (mandatory)   DMX start address [0-511]</li> <li><code>fixture</code> (mandatory)   Matches the <code>shortName</code> of the fixture JSON, or <code>name</code> if no <code>shortName</code> is defined.</li> <li><code>mode</code> (optional)   Matches the <code>name</code> of the desired mode in the <code>modes</code> section of the fixture JSON.   If there is only one mode, this option config option is optional.</li> <li><code>entity_id_prefix</code> (optional)   Allows one to configure the entity ID of the created entities, this will then also be used for unique_id instead of universe/channel.   Thus, when this option is used, this fixture can be moved freely without creating duplicate entities.</li> <li> <ul> <li>Number entities: <code>number.{entity_id_prefix}_{channel_name}</code> or <code>nubmer.{entity_id_prefix}_{channel_name}_{capability_name}</code></li> </ul> </li> <li> <ul> <li>Select entities: <code>select.{entity_id_prefix}_{channel_name}</code></li> </ul> </li> <li> <ul> <li>Light entities: <code>light.{entity_id_prefix}</code></li> </ul> </li> </ul>"},{"location":"config/#compatibility-options","title":"Compatibility Options","text":"<ul> <li><code>send_partial_universe</code> (optional, default: true)   Art-Net supports updating only part of a universe and leaving the unchanged parts out of its packet.   Some Art-Net nodes do not support partial universes, so it may help to disable this functionality.</li> <li><code>manual_nodes</code> (optional)   Art-Net supports auto-discovery of Art-Net nodes, this works through broadcasting on the network.   If nodes are not discovered automatically, they may be added manually,   so that updates for this universe are always sent to this address as well. </li> <li> <ul> <li><code>host</code> (mandatory): IP address</li> </ul> </li> <li> <ul> <li><code>port</code> (optional, default: <code>6454</code>): Art-Net port</li> </ul> </li> </ul>"},{"location":"config/#step-3-restart-and-verify","title":"Step 3: Restart and Verify","text":"<ol> <li>Restart Home Assistant to load the new configuration</li> <li>Check that your fixtures appear as entities in Home Assistant</li> </ol>"},{"location":"config/#troubleshooting","title":"Troubleshooting","text":""},{"location":"config/#check-logs","title":"Check Logs","text":"<ol> <li>Go to Settings \u2192 System \u2192 Logs</li> <li>Filter logs by typing <code>dmx</code> in the search box</li> <li>Look for error messages related to fixture loading or configuration</li> </ol>"},{"location":"config/#enable-debug-logging","title":"Enable Debug Logging","text":"<p>Add this to your <code>configuration.yaml</code> for detailed debugging:</p> <pre><code>logger:\n  logs:\n    custom_components.dmx: debug\n</code></pre> <p>Important: Restart Home Assistant after adding debug logging.</p> <p>Art-Net\u2122 Designed by and Copyright Artistic Licence</p>"},{"location":"migration/","title":"How to migrate from the old fixture definitions?","text":"<p>All your current fixtures are now still supported! Here's the process to get your integration migrated.</p>"},{"location":"migration/#installing","title":"Installing","text":"<p>Our integration name changed from <code>artnet_led</code> to <code>dmx</code>. HACS doesn't allow this, so we are unable to upgrade this in-place. Therefore a manual release is needed for the beta.</p> <p>Under the release download the source code.</p> <p>In this ZIP, navigate to <code>custom_components/dmx</code> and copy this <code>dmx</code> folder into your Home Assistant's <code>custom_components</code> folder. </p>"},{"location":"migration/#find-your-fixture-format","title":"Find your fixture format","text":"<p>Most of the previously supported fixtures already have a generic fixture variant for you to download.</p> <p>Download as: Open Fixture Library JSON</p> <p>Examples:</p> <ul> <li>Single dimmer</li> <li>CW/WW</li> <li>Dimmer/color temperature</li> <li>RGB</li> <li>Dimmer/RGB</li> <li>RGBWW</li> </ul> <p>This downloads a ZIP, inside this ZIP ignore the <code>manufacturers.json</code> and copy the JSON file of fixture itself into your HomeAssistants <code>config/fixtures</code> folder, which you will need to create. The <code>config</code> folder is the one that houses your <code>configuration.yaml</code>.</p> <p>This fixture format is extremely flexible and contains templating, channel switching, matrixes, and many other crazy things, and we're compatible with all of it. :)</p> <p>You can go ahead and use the editor or write a JSON by hand.</p> <p>Note down the <code>shortName</code> of your fixtures, or <code>name</code> if it has no <code>shortName</code>, we will use these in the next step.</p>"},{"location":"migration/#adding-the-fixtures-to-your-house","title":"Adding the fixtures to your house","text":"<p>Now that you have all the types of lights configured, it's time to add them. This step is explained in detail in Configuration.</p>"},{"location":"migration/#aftercare","title":"Aftercare","text":"<p>If the new light fixtures now work, you may remove the old <code>artnet_led</code> folder and remove the old entities from your system.</p> <p>When the 1.0.0 releases, this integration will be submitted for HACS default repositories, so manual installation won't be needed any more.</p>"}]}